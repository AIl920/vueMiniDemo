{"version":3,"file":"vue.js","sources":["../src/compiler/generate.js","../src/compiler/parser.js","../src/compiler/index.js","../src/vdom/patch.js","../src/observer/dep.js","../src/util/next-tick.js","../src/observer/scheduler.js","../src/observer/watcher.js","../src/lifecycle.js","../src/observer/array.js","../src/observer/index.js","../src/utils.js","../src/state.js","../src/util/index.js","../src/init.js","../src/vdom/index.js","../src/render.js","../src/global-api/index.js","../src/index.js"],"sourcesContent":["// {{aaa}}\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\n\r\n// html字符串 => 字符串 => _c('div', {id: 'app', a: 1}, 'hello')\r\n// [{ name: \"xxx\", value: \"xxx\" }, { name: \"xxx\", value: \"xxx\" }]\r\nfunction genProps(attrs) {\r\n    let str = \"\";\r\n    for (let i = 0; i < attrs.length; i++) {\r\n        const attr = attrs[i];\r\n        // color: red; background: blue\r\n        if (attr.name === \"style\") {\r\n            let styleObj = {};\r\n            attr.value.replace(/([^;:]+)\\:([^;:]+)/g, function () {\r\n                styleObj[arguments[1]] = arguments[2]\r\n            })\r\n            attr.value = styleObj;\r\n        }\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},`;\r\n    }\r\n    return `{${str.slice(0, -1)}}`\r\n}\r\n\r\nfunction gen(el) {\r\n    // element = 1 text = 3\r\n    if (el.type == 1) {\r\n        return genProps(el);\r\n    } else {\r\n        const text = el.text;\r\n        if (!defaultTagRE.test(text)) {\r\n            return `_v('${text}')`\r\n        } else {\r\n            // 'hello' + arr + 'world'\r\n            // hello {{arr}} {{aa}} world\r\n            let tokens = [];\r\n            let match;\r\n            // css-loader 原理一样\r\n            let lastIndex = defaultTagRE.lastIndex = 0;\r\n            // 看有没有匹配到\r\n            while (match = defaultTagRE.exec(text)) {\r\n                // 开始索引\r\n                const index = match.index;\r\n                if (index > lastIndex) {\r\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)));\r\n                }\r\n                tokens.push(`_s(${match[1].trim()})`);\r\n                lastIndex = index + match[0].length;\r\n            }\r\n            if (lastIndex < text.length) {\r\n                tokens.push(JSON.stringify(text.slice(lastIndex)));\r\n            }\r\n            return `_v(${tokens.join(\"+\")})`\r\n        }\r\n    }\r\n}\r\n\r\nfunction genChildren(el) {\r\n    // 获取儿子\r\n    const children = el.children;\r\n    if (children) {\r\n        return children.map(c => gen(c)).join(\",\")\r\n    }\r\n    return false;\r\n}\r\n\r\n//  _c('div',{id:'app',a:1},_c('span',{},'world'),_v())\r\nexport function generate(el) {\r\n    // 遍历树 将树拼接成字符串\r\n    const children = genChildren(el);\r\n    const code = `_c('${el.tag}',${\r\n        el.attrs.length? genProps(el.attrs): 'undefined'\r\n    }${\r\n        children? `,${children}`:''\r\n    })`;\r\n\r\n    return code;\r\n}\r\n","// 标签名\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\n// 用来获取的标签名的 match 后的索引为1的\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\n// 匹配开始标签的\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);\r\n// 匹配闭合标签的\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\r\n// a=b  a=\"b\"  a='b'\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\r\n// />   <div/>\r\nconst startTagClose = /^\\s*(\\/?)>/;\r\n// {{aaaaa}}\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\n\r\n// ast（语法层面的描述 js css html）vdom（dom 节点）\r\n\r\n// html字符串解析成 对应的脚本来触发 tokens <div id=\"app\">{{ name }}</div>\r\n// 将解析后的结果，组装成一个树结构 栈\r\nfunction createAstElement(tagName, attrs) {\r\n    return {\r\n        tag: tagName,\r\n        type: 1,\r\n        children: [],\r\n        parent: null,\r\n        attrs\r\n    }\r\n}\r\n\r\nlet root = null;\r\nlet stack = [];\r\nfunction start(tagName, attributes) {\r\n    const parent = stack[stack.length - 1];\r\n    const element = createAstElement(tagName, attributes);\r\n    if (!root) {\r\n        root = element;\r\n    }\r\n    if (parent) {\r\n        // 当放入栈中时，继续父亲是谁\r\n        element.parent = parent;\r\n        parent.children.push(element);\r\n    }\r\n    stack.push(element);\r\n}\r\n\r\nfunction end(tagName) {\r\n    // 获取数组最后一项并且删除\r\n    const last = stack.pop();\r\n    if (last.tag !== tagName) {\r\n        throw new Error(\"标签有误\")\r\n    }\r\n}\r\n// 字符处理\r\nfunction chars(text) {\r\n    text = text.replace(/\\s/g, \"\");\r\n    const parent = stack[stack.length -  1];\r\n    if (text) {\r\n        parent.children.push({\r\n            type: 3,\r\n            text\r\n        })\r\n    }\r\n}\r\n// 解析HTML\r\nexport function parserHTML(html) {\r\n    function advance(len) {\r\n        // 截取字符串\r\n        html = html.substring(len);\r\n    }\r\n    // 解析开始标签\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen);\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1],\r\n                attrs: []\r\n            }\r\n            advance(start[0].length);\r\n            let end;\r\n            // 如果没有遇到标签结尾就不停的解析\r\n            let attr;\r\n\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                match.attrs.push({\r\n                    name: attr[1],\r\n                    value: attr[3] || attr[4] || attr[5]\r\n                })\r\n                advance(attr[0].length);\r\n            }\r\n            if (end) {\r\n                advance(end[0].length);\r\n            }\r\n            return match;\r\n        }\r\n        // 不是开始标签\r\n        return false;\r\n    }\r\n\r\n    // 看要解析的内容是否存在，如果存在就不停的解析\r\n    while (html) {\r\n        // 当前解析的开头\r\n        const textEnd = html.indexOf(\"<\");\r\n        if (textEnd == 0) {\r\n            // 解析开始标签\r\n            const startTagMath = parseStartTag(html);\r\n            if (startTagMath) {\r\n                start(startTagMath.tagName, startTagMath.attrs);\r\n                continue;\r\n            }\r\n            const endTagMath = html.match(endTag);\r\n            if (endTagMath) {\r\n                end(endTagMath[1]);\r\n                advance(endTagMath[0].length);\r\n                continue;\r\n            }\r\n        }\r\n        // // </div>\r\n        let text;\r\n        if (textEnd > 0) {\r\n            text = html.substring(0, textEnd);\r\n        }\r\n        if (text) {\r\n            chars(text);\r\n            advance(text.length);\r\n        }\r\n    }\r\n    return root;\r\n}\r\n\r\n/**\r\n * 看下用户是否传入了，没有传入可能传入的是 template，template如果也没有传递\r\n * 将我们的 html => 词法解析（开始标签，结束标签，属性，文本）\r\n * => ast语法数 用来描述 html 语法的 stack = []\r\n *\r\n * codegen   <div>hello</div> => _c(\"div\", {}, \"hello\") => 让字符串执行\r\n * 字符串如果转成代码 eval 好性能 会有作用域问题\r\n *\r\n * 模板引擎 new Function + width 来实现\r\n */\r\n","import { generate } from \"./generate\";\r\nimport { parserHTML } from \"./parser\";\r\n\r\nexport function compileToFunction(template) {\r\n    console.log(\"template\",template)\r\n    const root = parserHTML(template);\r\n\r\n    // 生成代码\r\n    const code = generate(root);\r\n    console.log(\"root\", root, code)\r\n    // code 中会用到数据 数据再 vm 上\r\n    return new Function(`with(this){return ${code}}`);\r\n    // render(){\r\n    //     return\r\n    // }\r\n    // html=> ast（只能描述语法 语法不存在的属性无法描述） => render函数 + (with + new Function) => 虚拟dom （增加额外的属性） => 生成真实dom\r\n}\r\n","/**\r\n * 将虚拟节点渲染成真实节点\r\n */\r\nexport function patch(oldVNode, vnode) {\r\n    // 是否是真实元素\r\n    const isRealElement = oldVNode.nodeType;\r\n\r\n    if (isRealElement) {\r\n        const oldElm = oldVNode;\r\n        const parentElm = oldElm.parentNode;\r\n\r\n        let el = createElm(vnode);\r\n        parentElm.insertBefore(el, oldElm.nextSibling);\r\n        parentElm.removeChild(oldVNode);\r\n        return el;\r\n    }\r\n}\r\n\r\nfunction createElm(vnode) {\r\n    const { tag, children, text } = vnode;\r\n    if (typeof tag === \"string\") {\r\n        // 虚拟节点会有一个el属性，对应真实节点\r\n        vnode.el = document.createElement(tag);\r\n        updateProperties(vnode);\r\n        children.forEach(child => {\r\n            vnode.el.appendChild(createElm(child));\r\n        });\r\n    } else {\r\n        vnode.el = document.createTextNode(text);\r\n    }\r\n    return vnode.el;\r\n}\r\n\r\nfunction updateProperties(vnode) {\r\n    // 获取当前老节点中的属性\r\n    const newProps = vnode.data || {};\r\n    // 获取当前的真实节点\r\n    const el = vnode.el;\r\n    for (let key in newProps) {\r\n        if (key === \"style\") {\r\n            for (let styleName in newProps.style) {\r\n                el.style[styleName] = newProps.style[styleName];\r\n            }\r\n        } else if (key === \"class\") {\r\n            el.className = newProps.class;\r\n        } else {\r\n            el.setAttribute(key, newProps[key]);\r\n        }\r\n    }\r\n\r\n}\r\n","// 依赖收集\r\nlet id = 0;\r\n/**\r\n * 每个属性我都给他分配一个 dep，dep 可以来存放 watcher\r\n * watcher 中还要存放这个 dep\r\n */\r\nclass Dep {\r\n    constructor() {\r\n        this.id = id++;\r\n        // 用来存放 watcher的\r\n        this.subs = [];\r\n    }\r\n    depend() {\r\n        // Dep.target dep里要存放这个 watcher，watcher要存放dep 多对多的关系\r\n        if (Dep.target) {\r\n            Dep.target.addDep(this);\r\n        }\r\n    }\r\n    addSub(watcher) {\r\n        this.subs.push(watcher);\r\n    }\r\n    // 通知更新\r\n    notify() {\r\n        this.subs.forEach(watcher => watcher.update());\r\n    }\r\n}\r\n// 当前正在评估的目标观察者。\r\n// 这是全局唯一的，因为只有一个观察者\r\n// 可以一次求值。\r\nDep.target = null\r\nconst targetStack = []\r\nexport function pushTarget(watcher) {\r\n    targetStack.push(watcher);\r\n    Dep.target = watcher\r\n}\r\nexport function popTarget() {\r\n    targetStack.pop();\r\n    Dep.target = targetStack[targetStack.length - 1];\r\n}\r\n\r\nexport default Dep;\r\n","const callbacks = [];\r\nlet waiting = false;\r\n\r\nfunction flushCallbacks() {\r\n    callbacks.forEach(cb => cb());\r\n    waiting = false;\r\n}\r\n\r\nfunction timer(flushCallbacks) {\r\n    let timerFn = () => {};\r\n    if (Promise) {\r\n        timerFn = () => {\r\n            Promise.resolve().then(flushCallbacks);\r\n        }\r\n    } else if (MutationObserver) {\r\n        const textNode = document.createTextNode(\"1\");\r\n        const observe = new MutationObserver(flushCallbacks);\r\n        observe.observe(textNode, {\r\n            characterData: true\r\n        })\r\n\r\n        timerFn = () => {\r\n            textNode.textContent = \"3\";\r\n        }\r\n        // 微任务\r\n    } else if (setImmediate) {\r\n        timerFn = () => {\r\n            setImmediate(flushCallbacks);\r\n        }\r\n    } else {\r\n        timerFn = () => {\r\n            setTimeout(flushCallbacks);\r\n        }\r\n    }\r\n}\r\n\r\n// 微任务是在页面渲染前执行 我取的是内存中的 dom ，不关心你渲染完毕没有\r\nexport function nextTick(cb) {\r\n    // flushSchedulerQueue / userCallback\r\n    callbacks.push(cb);\r\n    if (!waiting) {\r\n        // vue2 中考虑了兼容性问题 vue3 里面不在考虑兼容性问题\r\n        timer(flushCallbacks);\r\n        waiting = true;\r\n    }\r\n}\r\n","import { nextTick } from \"../util/next-tick\";\r\n\r\nlet queue = [];\r\nlet has = {}; // 做列表的，列表维护存放了哪些 watcher\r\nlet pending = false;\r\n\r\n// 动画 滚动的频率高，节流 requestFrameAnimation\r\nfunction flushSchedulerQueue() {\r\n    for (let i = 0; i < queue.length; i++) {\r\n        // vm.name = 123?\r\n        queue[i].run();\r\n    }\r\n    queue = [];\r\n    has = {};\r\n    pending = false;\r\n}\r\n\r\n/**\r\n * 要等待同步代码执行完毕后才执行异步逻辑\r\n * 当前执行栈中代码执行完毕后，会先清空微任务，在清空宏任务，我希望尽早更新页面\r\n */\r\nexport function queueWatcher(watcher) {\r\n    // name 和 age的id是同一个\r\n    const id = watcher.id;\r\n    if (has[id] == null) {\r\n        queue.push(watcher);\r\n        has[id] = true;\r\n        // 开启一次更新操作 批处理（防抖）\r\n        if (!pending) {\r\n            nextTick(flushSchedulerQueue, 0);\r\n            pending = true;\r\n        }\r\n    }\r\n}\r\n","import { pushTarget, popTarget } from \"./dep\";\r\nimport { queueWatcher } from \"./scheduler\";\r\nlet id = 0;\r\nclass Watcher {\r\n    constructor(vm, exprOrFn, cb, options) {\r\n        this.vm = vm;\r\n        this.exprOrFn = exprOrFn;\r\n        if (typeof exprOrFn === \"function\") {\r\n            this.getter = exprOrFn;\r\n        }\r\n        this.cb = cb;\r\n        this.options = options;\r\n        this.id = id++;\r\n\r\n        // 默认应该让exprOrFn执行  exprOrFn 方法做了什么是？ render （去vm上了取值）\r\n        this.deps = [];\r\n        this.depsId = new Set();\r\n        this.get(); // 默认初始化 要取值\r\n    }\r\n    // 稍后用户更新时，可以重新调用 getter 方法\r\n    get() {\r\n        // defineProperty.get, 每个属性都可以收集自己的watcher\r\n        // 我希望一个属性可以对应多个watcher，同时一个 watcher 可以对应多个属性\r\n        pushTarget(this); // Dep.target = watcher\r\n        this.getter();  // render() 方法会去 vm 上取值 vm._update(vm._render)\r\n        popTarget();   // Dep.target = 上一个 watcher 如果Dep.target有值说明这个变量在模板中使用了\r\n    }\r\n    // vue 中的更新操作是异步的\r\n    update() {\r\n        // 每次更新时 this\r\n        // 多次调用 update 我希望先将 watcher 缓存下来，等一会一起更新\r\n        queueWatcher(this);\r\n    }\r\n    // 后续要有其他功能\r\n    run() {\r\n        this.get();\r\n    }\r\n    // 添加 dep\r\n    addDep(dep) {\r\n        const id = dep.id;\r\n        // 不存在就添加\r\n        if (!this.depsId.has(id)) {\r\n            this.depsId.add(id);\r\n            this.deps.push(dep);\r\n            // 调用 dep 的addSub方法添加 watcher\r\n            dep.addSub(this);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * watcher 和 dep\r\n * 我们将更新的功能封装了一个 watcher\r\n * 渲染页面前，会将当前 watcher 放到 Dep 类上\r\n * 在 vue 中页面渲染时使用的属性，需要进行依赖收集，收集对象的渲染 watcher\r\n * 取值时，给每个属性都加了个 dep 属性，用于存储这个渲染 watcher （同一个 watcher 会对应多个 dep）\r\n * 每个属性可能对应多个视图（多个视图肯定是多个 watcher）一个属性要对应多个 watcher\r\n * dep.depend() => 通知 dep 存放 watcher => Dep.target.addDep() => 通知 watcher 存放 dep\r\n * 双向存储\r\n */\r\n\r\nexport default Watcher;\r\n","import { patch } from \"./vdom/patch\";\r\nimport Watcher from \"./observer/watcher\";\r\nexport function lifecycleMixin(Vue) {\r\n    Vue.prototype._update = function (vnode) {\r\n        const vm = this;\r\n        // 虚拟节点渲染成真实节点\r\n        vm.$el = patch(vm.$el, vnode);\r\n    };\r\n}\r\n\r\nexport function mountComponent(vm, el) {\r\n    vm.$el = el;\r\n    // 更新函数，数据变化后会再次调用此函数\r\n    const updateComponent = () => {\r\n        // 调用 render 函数，生成虚拟 dom\r\n        // 将虚拟节点，渲染到页面上\r\n        // 后续更新可以调用updateComponent方法\r\n        vm._update(vm._render());\r\n        // 用虚拟dom 生成真实dom\r\n    }\r\n\r\n    // 观察者模式：属性是“被观察者” 刷新页面：“观察者”\r\n    new Watcher(vm, updateComponent, () => {\r\n        console.log(\"更新视图了\")\r\n    }, true);  // 它是一个渲染watcher  后续有其他的watcher\r\n}\r\n\r\n/**\r\n * 调用生命周期\r\n * @param vm vue\r\n * @param hook 调用名\r\n */\r\nexport function callHook(vm, hook) {\r\n    const handlers = vm.$options[hook];\r\n    if (handlers) {\r\n        for (let i = 0; i < handlers.length; i++) {\r\n            handlers[i].call(vm);\r\n        }\r\n    }\r\n}\r\n","let oldArrayProtoMethods = Array.prototype;\r\nexport let arrayMethods = Object.create(oldArrayProtoMethods);\r\n\r\nconst methods = [\r\n    \"push\",\r\n    \"pop\",\r\n    \"shift\",\r\n    \"unshift\",\r\n    \"reverse\",\r\n    \"sort\",\r\n    \"splice\"\r\n];\r\nmethods.forEach(method => {\r\n    // 用户调用的如果是以上7个方法，会用我自己重写的，否则用原来的数组方法\r\n    // args 是参数列表，arr.push(1, 2,33)\r\n    arrayMethods[method] = function (...args) {\r\n        oldArrayProtoMethods[method].call(this, ...args);\r\n        let inserted;\r\n        // 根据当前数组获取到 observer 实例\r\n        const ob = this.__ob__;\r\n        switch (method) {\r\n            case \"push\":\r\n            case \"unshift\":\r\n                // 就是新增的内容\r\n                inserted = args;\r\n                break;\r\n            case \"splice\":\r\n                inserted = args.slice(2);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        // 如果有新增的内容要进行继续劫持，我需要观测的数组里的每一项，而不是数组\r\n        // 更新操作 todo...\r\n        if (inserted) ob.observeArray(inserted);\r\n\r\n        // 数组的 observer.dep 属性\r\n        ob.dep.depend();\r\n    }\r\n})\r\n","import { arrayMethods } from \"./array\";\r\nimport Dep from \"./dep\";\r\n\r\n/**\r\n * 1.如果数据是对象，会将对象不停的递归进行劫持\r\n * 2.如果是数组，会劫持数组的方法，并对数组中不是基本数据类型的进行检测\r\n *\r\n * 检测数据变化 类有类型，对象无类型\r\n */\r\n\r\n// 观察值\r\n/**\r\n * 如果给对象新增一个属性不会触发视图更新\r\n * （给对象本身也增加一个 dep，dep 中存 watcher，如果增加一个属性后，我就手动的触发watcher的更新）\r\n */\r\nclass Observer {\r\n    constructor(value) { // 对对象中的所有属性进行劫持\r\n\r\n        // 数据可能是数组或者对象\r\n        this.dep = new Dep();\r\n\r\n        // 给所有响应式数据增加标识，并且可以在响应式上获取 Observer 实例上的方法\r\n        Object.defineProperty(value, \"__ob__\", {\r\n            enumerable: false, // 不可枚举的\r\n            configurable: false,\r\n            value: this\r\n        });\r\n        // value.__ob__ = this; // 所有被劫持过的属性都有__ob__\r\n        if (Array.isArray(value)) { // 我希望数组的变化可以触发视图更新？\r\n            // 数组挟持的逻辑\r\n            // 对数组原来的方法进行改写，切片编程 高阶函数\r\n            value.__proto__ = arrayMethods;\r\n            // 如果数组中的数据是对象类型，需要监控对象的变化\r\n            this.observeArray(value);\r\n        } else {\r\n            // 对象劫持的逻辑\r\n            this.walk(value);\r\n        }\r\n    }\r\n\r\n    // 对我们数组的数组和数组中的对象再次劫持，递归了\r\n    observeArray(value) {\r\n        // 如果数组里放的是对象类型，也做了观测，JSON.stringify() 也做了收集起来了\r\n        value.forEach(item => observe(item));\r\n    }\r\n\r\n    // 让对象上的所有属性依次进行观测\r\n    walk(data) {\r\n        Object.keys(data).forEach(key => {\r\n            defineReactive(data, key, data[key]);\r\n        })\r\n    }\r\n}\r\n\r\n// vue2 会对对象进行遍历，将每个属性用 defineProperty 重新定义，性能差\r\nfunction dependArray(value) {\r\n    for (let i = 0; i < value.length; i++) {\r\n        // current 是数组里面的数组 [[[[]]]]\r\n        const current = value[i];\r\n        current.__ob__ && current.__ob__.dep.depend();\r\n        if (Array.isArray(current)) {\r\n            dependArray(current);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction defineReactive(data, key, value) {// value 有可能是对象\r\n    // 本身用户默认值是对象套对象，需要递归处理\r\n    const childOb = observe(value);\r\n    // 每个属性都有一个 dep 属性\r\n    const dep = new Dep();\r\n    // 获取到了数组对应 ob\r\n    // 对象依赖收集\r\n    Object.defineProperty(data, key, {\r\n        get() {\r\n            // 取值时我希望将 watcher 和 dep 对应起来\r\n            if (Dep.target) { // 此值是在模板中取值的\r\n                // 让 dep 记住 watcher\r\n                dep.depend();\r\n                // 可能是数组 可能是对象，对象也要收集依赖，后续写 $set 方法时需要触发他自己的更新操作\r\n                if (childOb) {\r\n                    // 就是让数组和对象也记录 watcher\r\n                    childOb.dep.depend();\r\n\r\n                    // 取外层数组要将数组里面的也进行依赖收集\r\n                    if (Array.isArray(value)) {\r\n                        // 递归收集数组依赖\r\n                        dependArray(value);\r\n                    }\r\n                }\r\n            }\r\n            return value;\r\n        },\r\n        set(newValue) {\r\n            // todo... 更新视图\r\n            if (newValue !== value) {\r\n                // 如果用户赋值一个新对象，需要将这个对象进行挟持\r\n                observe(newValue);\r\n                value = newValue;\r\n                // 告诉当前的属性存放的 watcher 执行更新视图\r\n                dep.notify();\r\n            }\r\n        }\r\n    })\r\n\r\n}\r\n\r\nexport function observe(data) {\r\n    // 如果是对象才观测\r\n    if (typeof data !== \"object\" || data === null) {\r\n        return;\r\n    }\r\n    // 默认最外层的 data 必须是一个对象\r\n    return new Observer(data);\r\n}\r\n","export function isFunction(val) {\r\n    return typeof(val) === \"function\";\r\n}\r\n\r\nexport function isObject(val) {\r\n    return typeof(val) === \"object\" && val !== null;\r\n}\r\n","import { observe } from \"./observer/index\";\r\nimport { isFunction } from \"./utils\";\r\n\r\n// 状态的初始化\r\nexport function initState(vm) {\r\n    const opts = vm.$options;\r\n\r\n    if (opts.props) initProps(vm);\r\n    if (opts.methods) initMethod(vm);\r\n    if (opts.data) {\r\n        initData(vm);\r\n    }\r\n\r\n    if (opts.computed) initComputed(vm);\r\n    if (opts.watch) initWatch(vm);\r\n}\r\n\r\nfunction initProps(){}\r\nfunction initMethod(){}\r\n// 数据代理\r\nfunction proxy(vm, source, key) {\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[source][key];\r\n        },\r\n        set(newValue) {\r\n            vm[source][key] = newValue;\r\n        }\r\n    })\r\n}\r\n// 初始化数据\r\nfunction initData(vm) {\r\n    // vm.$el\r\n    // vue 内部会对属性检测如果是已 $ 开头 不会进行代理\r\n    let data = vm.$options.data;\r\n    // vue2中会将data中的所有数据 进行数据劫持 Object.defineProperty\r\n\r\n    // 这个时候 vm 和 data 没有任何关系，通过_data进行关联\r\n    data = vm._data = isFunction(data) ? data.call(vm) : data;\r\n    // 将 _data 上的属性全部代理给 vm 实例\r\n    // 用户去掉 vm.xxx => vm._data.xxx\r\n    for (let key in data) { // vm.name = \"xxx\" vm._data.name = \"xxx\"\r\n        proxy(vm, \"_data\", key);\r\n    }\r\n    observe(data);\r\n}\r\nfunction initComputed(){}\r\nfunction initWatch(){}\r\n","import { isObject } from \"../utils\";\r\n/**\r\n * 合并生命周期\r\n */\r\nexport const LIFECYCLE_HOOKS = [\r\n    \"beforeCreate\",\r\n    \"created\",\r\n    \"beforeMount\",\r\n    \"mounted\",\r\n    \"beforeUpdate\",\r\n    \"updated\",\r\n    \"beforeDestroy\",\r\n    \"destroyed\"\r\n]\r\n// 存放各种策略\r\n//   {}     {beforeCreate:Fn} => {beforeCreate:[fn]}\r\n//   {beforeCreate:[fn]}    {beforeCreate:fn}   => {beforeCreate:[fn,fn]}\r\nconst strats = {};\r\n\r\nLIFECYCLE_HOOKS.forEach(hook => {\r\n    strats[hook] = mergeHook;\r\n})\r\n// 合并\r\nfunction mergeHook(parentVal, childValue) {\r\n    if (childValue) {\r\n        if (parentVal) {\r\n            // 后续\r\n            return parentVal.concat(childValue);\r\n        } else {\r\n            // 第一次\r\n            return [childValue];\r\n        }\r\n    } else {\r\n        return parentVal;\r\n    }\r\n}\r\n\r\nexport function mergeOptions(parent, child) {\r\n    function mergeField(key) {\r\n        const parentVal = parent[key];\r\n        const childVal = child[key];\r\n        // 策略模式\r\n        if (strats[key]) { // 如果有对应的策略就调用对应的策略即可\r\n            options[key] = strats[key](parentVal, childVal);\r\n        } else {\r\n            if (isObject(parentVal) && isObject(childVal)) {\r\n                options[key] = { ...parentVal, ...childVal };\r\n            } else {\r\n                // 父亲中有，儿子中没有\r\n                options[key] = child[key] || parent[key];\r\n            }\r\n        }\r\n    }\r\n    const options = {};\r\n    for (let key in parent) {\r\n        mergeField(key);\r\n    }\r\n    for (let key in child) {\r\n        if (!parent.hasOwnProperty(key)) {\r\n            mergeField(key)\r\n        }\r\n    }\r\n    return options;\r\n}\r\n","import { compileToFunction } from \"./compiler/index\";\r\nimport { mountComponent, callHook } from \"./lifecycle\";\r\nimport { initState } from \"./state\";\r\nimport { mergeOptions } from \"./util/index\";\r\n\r\n// 初始化 vue 状态\r\n\r\n// 表示在 vue 的基础上做一次混合操作\r\nexport function initMixin(Vue) {\r\n    Vue.prototype._init = function (options) {\r\n        // el, data\r\n        const vm = this;\r\n        // 后面会对 options 进行扩展操作\r\n        // 合并参数\r\n        vm.$options = mergeOptions(vm.constructor.options, options);\r\n        // 初始化生命周期\r\n        callHook(vm, \"beforeCreate\");\r\n        // 对数据进行初始化 watch computed props data ...\r\n        // vm.$options.data 数据劫持\r\n        initState(vm);\r\n        callHook(vm, \"created\");\r\n\r\n        if (vm.$options.el) {\r\n            // 将数据挂载到这个模板上\r\n            vm.$mount(vm.$options.el);\r\n        }\r\n    }\r\n\r\n    // 挂载\r\n    Vue.prototype.$mount = function (el) {\r\n        const vm = this;\r\n        const options = vm.$options;\r\n        el = document.querySelector(el);\r\n        vm.$el = el;\r\n        // 把模板转换成对应的渲染函数 => 虚拟dom概念 vnode => diff算法 更新虚拟dom => 产生真实节点，更新\r\n        // 没有 render 用template，目前没有 render\r\n\r\n        if (!options.render) {\r\n            let template = options.template;\r\n            // 用户也没有传递 template 就取 el 的内容作为模板\r\n            if (!template && el) {\r\n                template = el.outerHTML;\r\n            }\r\n            options.render = compileToFunction(template);\r\n        }\r\n\r\n        // options.render 就是渲染函数\r\n        // 调用 render 方法 渲染成真实 dom 替换掉页面的内容\r\n        mountComponent(vm, el); // 组件的挂载流程\r\n    }\r\n}\r\n","export function createElement(vm, tag, data = {}, ...children) {\r\n    return vnode(vm, tag, data, data.key, children, undefined);\r\n}\r\n\r\nexport function createTextElement(vm, text) {\r\n    return vnode(vm, undefined, undefined, undefined, undefined, text);\r\n}\r\n\r\nfunction vnode(vm, tag, data, key, children, text) {\r\n    return {\r\n        vm,\r\n        tag,\r\n        data,\r\n        key,\r\n        children,\r\n        text,\r\n    }\r\n}\r\n","import { createElement, createTextElement } from \"./vdom/index\";\r\nexport function renderMixin(Vue) {\r\n    // 创建文本\r\n    Vue.prototype._v = function (text){\r\n        return createTextElement(this, text);\r\n    }\r\n    // 创建元素\r\n    Vue.prototype._c = function () {\r\n        return createElement(this, ...arguments);\r\n    }\r\n\r\n    Vue.prototype._s = function (val) {\r\n        if (typeof val === \"object\") return JSON.stringify(val);\r\n        return val;\r\n    }\r\n\r\n    Vue.prototype._render = function (){\r\n        const vm = this;\r\n        const { render } = vm.$options;\r\n        return render.call(vm);\r\n    }\r\n}\r\n","import { mergeOptions } from \"../util/index\";\r\nexport function initGlobalAPI(Vue) {\r\n    // 用来存放全局的配置，每个组件初始化的时候都会和options选项进行合并\r\n    Vue.options = {};\r\n    Vue.mixin = function (mixin) {\r\n        // 将属性合并到 Vue.options上\r\n        this.options = mergeOptions(this.options, mixin);\r\n        return this;\r\n    }\r\n}\r\n","import { initMixin } from \"./init\";\r\nimport { lifecycleMixin } from \"./lifecycle\";\r\nimport { renderMixin } from \"./render\";\r\nimport { initGlobalAPI } from \"./global-api/index\";\r\n\r\nfunction Vue(options) {\r\n    // options 为用户传入的选项\r\n\r\n    // 初始化操作，组件\r\n    this._init(options);\r\n}\r\n\r\n// 扩展原型的\r\ninitMixin(Vue); // 给原型上新增_init方法\r\nrenderMixin(Vue); // _render\r\nlifecycleMixin(Vue); // _update\r\n\r\n// 在类上扩展的 Vue.mixin\r\ninitGlobalAPI(Vue);\r\nexport default Vue;\r\n\r\n\r\n/**\r\n * init 主要做了状态的初始化（数据劫持 对象、数组）\r\n * $mount 找render方法（template -> render函数 ast -> codegen -> 字符串）\r\n * render = with + new Function(codegen)产生虚拟dom的方法\r\n * 虚拟dom -> 真实dom\r\n * vm._update(vm._render()); 先生成虚拟 dom -> 生成真实的dom元素\r\n * 初次渲染\r\n *\r\n */\r\n"],"names":["defaultTagRE","genProps","attrs","str","i","length","attr","name","styleObj","value","replace","arguments","JSON","stringify","slice","gen","el","type","text","test","tokens","match","lastIndex","exec","index","push","trim","join","genChildren","children","map","c","generate","code","tag","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","createAstElement","tagName","parent","root","stack","start","attributes","element","end","last","pop","Error","chars","parserHTML","html","advance","len","substring","parseStartTag","textEnd","indexOf","startTagMath","endTagMath","compileToFunction","template","console","log","Function","patch","oldVNode","vnode","isRealElement","nodeType","oldElm","parentElm","parentNode","createElm","insertBefore","nextSibling","removeChild","document","createElement","updateProperties","forEach","child","appendChild","createTextNode","newProps","data","key","styleName","style","className","setAttribute","id","Dep","subs","target","addDep","watcher","update","targetStack","pushTarget","popTarget","callbacks","waiting","flushCallbacks","cb","timer","Promise","MutationObserver","textNode","observe","characterData","setImmediate","nextTick","queue","has","pending","flushSchedulerQueue","run","queueWatcher","Watcher","vm","exprOrFn","options","getter","deps","depsId","Set","get","dep","add","addSub","lifecycleMixin","Vue","prototype","_update","$el","mountComponent","updateComponent","_render","callHook","hook","handlers","$options","call","oldArrayProtoMethods","Array","arrayMethods","Object","create","methods","method","args","inserted","ob","__ob__","observeArray","depend","Observer","defineProperty","enumerable","configurable","isArray","__proto__","walk","item","keys","defineReactive","dependArray","current","childOb","set","newValue","notify","isFunction","val","isObject","initState","opts","props","initProps","initMethod","initData","computed","initComputed","watch","initWatch","proxy","source","_data","LIFECYCLE_HOOKS","strats","mergeHook","parentVal","childValue","concat","mergeOptions","mergeField","childVal","hasOwnProperty","initMixin","_init","constructor","$mount","querySelector","render","outerHTML","undefined","createTextElement","renderMixin","_v","_c","_s","initGlobalAPI","mixin"],"mappings":"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"}